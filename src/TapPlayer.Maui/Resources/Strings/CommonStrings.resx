<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About...</value>
    <comment>Menu/Title</comment>
  </data>
  <data name="ApplicationSettings" xml:space="preserve">
    <value>Application settings</value>
    <comment>Menu/Title</comment>
  </data>
  <data name="AreYouSureYouWantToDeleteTheProject" xml:space="preserve">
    <value>Are you sure you want to delete the project "{0}"?</value>
    <comment>Confirmation request</comment>
  </data>
  <data name="Background" xml:space="preserve">
    <value>background</value>
    <comment>Checkbox</comment>
  </data>
  <data name="BackgroundPlayback" xml:space="preserve">
    <value>Background playback</value>
    <comment>Semantic</comment>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
    <comment>Button</comment>
  </data>
  <data name="ClickToColorForSelect" xml:space="preserve">
    <value>Click to color for select:</value>
  </data>
  <data name="CloseAppSettings" xml:space="preserve">
    <value>Close the application settings dialog without saving changes.</value>
    <comment>Semantic</comment>
  </data>
  <data name="CloseProject" xml:space="preserve">
    <value>Close project</value>
    <comment>Menu</comment>
  </data>
  <data name="CloseProjectEditor" xml:space="preserve">
    <value>Close the project editor without saving changes.</value>
  </data>
  <data name="CloseSelectColor" xml:space="preserve">
    <value>Close the color selection dialog.</value>
  </data>
  <data name="CloseTileEditor" xml:space="preserve">
    <value>Close the tile editor without saving changes.</value>
  </data>
  <data name="ColorBlue" xml:space="preserve">
    <value>Blue</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorBlueDark" xml:space="preserve">
    <value>Dark blue</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorBlueDark25" xml:space="preserve">
    <value>Dark blue 25%</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorBlueDark50" xml:space="preserve">
    <value>Dark blue 50%</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorBlueGreen" xml:space="preserve">
    <value>Sea wave</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorBlueGreenDark" xml:space="preserve">
    <value>Dark sea wave</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorBlueGreenDark25" xml:space="preserve">
    <value>Dark sea wave 25%</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorBlueGreenDark50" xml:space="preserve">
    <value>Dark sea wave 50%</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorBlueGreenLight" xml:space="preserve">
    <value>Light sea wave</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorBlueGreenLight50" xml:space="preserve">
    <value>Light sea wave 50%</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorBlueLight" xml:space="preserve">
    <value>Light blue</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorBlueLight50" xml:space="preserve">
    <value>Light blue 50%</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorGreen" xml:space="preserve">
    <value>Green</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorGreenDark" xml:space="preserve">
    <value>Dark green</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorGreenDark25" xml:space="preserve">
    <value>Dark green 25%</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorGreenDark50" xml:space="preserve">
    <value>Dark green 50%</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorGreenLight" xml:space="preserve">
    <value>Light green</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorGreenLight50" xml:space="preserve">
    <value>Light green 50%</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorPalette" xml:space="preserve">
    <value>Color palette</value>
    <comment>Title</comment>
  </data>
  <data name="ColorRed" xml:space="preserve">
    <value>Red</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorRedDark" xml:space="preserve">
    <value>Dark red</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorRedDark25" xml:space="preserve">
    <value>Dark red 25%</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorRedDark50" xml:space="preserve">
    <value>Dark red 50%</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorRedLight" xml:space="preserve">
    <value>Light red</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorRedLight50" xml:space="preserve">
    <value>Light red 50%</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorViolet" xml:space="preserve">
    <value>Violet</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorVioletDark" xml:space="preserve">
    <value>Dark violet</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorVioletDark25" xml:space="preserve">
    <value>Dark violet 25%</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorVioletDark50" xml:space="preserve">
    <value>Dark violet 50%</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorVioletLight" xml:space="preserve">
    <value>Light violet</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorVioletLight50" xml:space="preserve">
    <value>Light violet 50%</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorYellow" xml:space="preserve">
    <value>Sand</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorYellowDark" xml:space="preserve">
    <value>Dark sand</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorYellowDark25" xml:space="preserve">
    <value>Dark sand 25%</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorYellowDark50" xml:space="preserve">
    <value>Dark sand 50%</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorYellowLight" xml:space="preserve">
    <value>Light sand</value>
    <comment>Semantic</comment>
  </data>
  <data name="ColorYellowLight50" xml:space="preserve">
    <value>Light sand 50%</value>
    <comment>Semantic</comment>
  </data>
  <data name="Confirmation" xml:space="preserve">
    <value>Confirmation</value>
    <comment>Title</comment>
  </data>
  <data name="CreateProject" xml:space="preserve">
    <value>Create project</value>
    <comment>Menu/Button</comment>
  </data>
  <data name="DeleteProject" xml:space="preserve">
    <value>Delete project</value>
    <comment>Semantic</comment>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
    <comment>Title</comment>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
    <comment>Menu</comment>
  </data>
  <data name="IsPlaying" xml:space="preserve">
    <value>Is playing</value>
    <comment>Semantic</comment>
  </data>
  <data name="LanguageField" xml:space="preserve">
    <value>Language:</value>
    <comment>Language in application settings form.</comment>
  </data>
  <data name="Loop" xml:space="preserve">
    <value>Loop</value>
    <comment>Radio</comment>
  </data>
  <data name="LoopedPlayback" xml:space="preserve">
    <value>Looped playback</value>
    <comment>Semantic</comment>
  </data>
  <data name="NewProject" xml:space="preserve">
    <value>New project</value>
    <comment>Title</comment>
  </data>
  <data name="NoSource" xml:space="preserve">
    <value>Playback file not selected</value>
    <comment>Semantic</comment>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
    <comment>Button</comment>
  </data>
  <data name="OkTileEditor" xml:space="preserve">
    <value>Apply changes and close the tile config dialog.</value>
    <comment>Semantic</comment>
  </data>
  <data name="OpenOrCreateProjectToStart" xml:space="preserve">
    <value>To get started, open a project
or create a new one:</value>
    <comment>Message</comment>
  </data>
  <data name="OpenProject" xml:space="preserve">
    <value>Open project</value>
    <comment>Menu/Button/Semantic</comment>
  </data>
  <data name="PlayOnce" xml:space="preserve">
    <value>Play once</value>
    <comment>Radio</comment>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Project</value>
    <comment>Title</comment>
  </data>
  <data name="ProjectName" xml:space="preserve">
    <value>Name</value>
    <comment>Project name in list.</comment>
  </data>
  <data name="ProjectNameField" xml:space="preserve">
    <value>Project name:</value>
    <comment>Project name in editor from.</comment>
  </data>
  <data name="ProjectNameIsRequired" xml:space="preserve">
    <value>Project name is required.</value>
    <comment>Validaton</comment>
  </data>
  <data name="Projects" xml:space="preserve">
    <value>Projects</value>
    <comment>Title</comment>
  </data>
  <data name="ProjectSettings" xml:space="preserve">
    <value>Project settings</value>
    <comment>Menu/Title/Semantic</comment>
  </data>
  <data name="RestartIsRequired" xml:space="preserve">
    <value>Some settings will only take effect after restarting the application.</value>
    <comment>Application settings warning.</comment>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
    <comment>Button</comment>
  </data>
  <data name="SaveAppSettings" xml:space="preserve">
    <value>Save application settings and close the dialog.</value>
    <comment>Semantic</comment>
  </data>
  <data name="SaveProject" xml:space="preserve">
    <value>Save changes of project settings.</value>
  </data>
  <data name="SelectColor" xml:space="preserve">
    <value>Select color</value>
    <comment>Button</comment>
  </data>
  <data name="SelectedColor" xml:space="preserve">
    <value>Selected color</value>
    <comment>Semantic</comment>
  </data>
  <data name="SelectFile" xml:space="preserve">
    <value>Select file</value>
    <comment>Button</comment>
  </data>
  <data name="TapToConfig" xml:space="preserve">
    <value>Tap on a tile to config:</value>
  </data>
  <data name="TileName" xml:space="preserve">
    <value>Name:</value>
    <comment>Tile name in editor.</comment>
  </data>
  <data name="TilesField" xml:space="preserve">
    <value>Tiles:</value>
    <comment>Tiels size picker in editor form.</comment>
  </data>
  <data name="TileX" xml:space="preserve">
    <value>Tile {0}</value>
  </data>
  <data name="TitleSettings" xml:space="preserve">
    <value>Tile settings</value>
    <comment>Title</comment>
  </data>
  <data name="UnableToPlay" xml:space="preserve">
    <value>Unable to play due to an error</value>
    <comment>Semantic</comment>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
    <comment>Button</comment>
  </data>
  <data name="YouDontHaveAnyProjectsYet" xml:space="preserve">
    <value>You don't have any projects yet.</value>
    <comment>Message</comment>
  </data>
</root>