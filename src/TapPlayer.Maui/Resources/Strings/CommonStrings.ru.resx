<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>О программе...</value>
  </data>
  <data name="AreYouSureYouWantToDeleteTheProject" xml:space="preserve">
    <value>Вы действительно хотите удалить проект "{0}"?

Восстановить данные после удаления будет невозможно.</value>
  </data>
  <data name="Background" xml:space="preserve">
    <value>играть в фоне, не останавливая другие звуки</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="ClickToColorForSelect" xml:space="preserve">
    <value>Кликните по цвету, чтобы выбрать его:</value>
  </data>
  <data name="CloseProjectEditor" xml:space="preserve">
    <value>Закрыть настройки проекта без сохранения изменений.</value>
  </data>
  <data name="CloseSelectColor" xml:space="preserve">
    <value>Закрыть диалог выбора цвета.</value>
  </data>
  <data name="CloseTileEditor" xml:space="preserve">
    <value>Закрыть настройки плитки без сохранения изменений.</value>
  </data>
  <data name="ColorPalette" xml:space="preserve">
    <value>Палитра</value>
  </data>
  <data name="Confirmation" xml:space="preserve">
    <value>Подтверждение</value>
  </data>
  <data name="CreateProject" xml:space="preserve">
    <value>Новый проект</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Ошибка</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Выход</value>
  </data>
  <data name="Loop" xml:space="preserve">
    <value>зациклить</value>
  </data>
  <data name="NewProject" xml:space="preserve">
    <value>Новый проект</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="OpenOrCreateProjectToStart" xml:space="preserve">
    <value>Откройте существующий проект или создайте новый.</value>
  </data>
  <data name="OpenProject" xml:space="preserve">
    <value>Открыть проект</value>
  </data>
  <data name="PlayOnce" xml:space="preserve">
    <value>проиграть один раз</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Параметры проекта</value>
  </data>
  <data name="ProjectName" xml:space="preserve">
    <value>Проект</value>
  </data>
  <data name="ProjectNameField" xml:space="preserve">
    <value>Название:</value>
  </data>
  <data name="ProjectNameIsRequired" xml:space="preserve">
    <value>Укажите название проекта.</value>
  </data>
  <data name="Projects" xml:space="preserve">
    <value>Мои проекты</value>
  </data>
  <data name="ProjectSettings" xml:space="preserve">
    <value>Настройка проекта</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Сохранить</value>
  </data>
  <data name="SaveProject" xml:space="preserve">
    <value>Сохранить изменения настроек проекта и закрыть диалог.</value>
  </data>
  <data name="SaveTile" xml:space="preserve">
    <value>Сохранить изменения настроек плитки и закрыть диалог.</value>
  </data>
  <data name="SelectColor" xml:space="preserve">
    <value>Выбрать цвет</value>
  </data>
  <data name="SelectedColor" xml:space="preserve">
    <value>Выбраный цвет</value>
  </data>
  <data name="SelectFile" xml:space="preserve">
    <value>Выбрать файл</value>
  </data>
  <data name="TapToConfig" xml:space="preserve">
    <value>Кликните по плитке, чтобы настроить её:</value>
  </data>
  <data name="TileName" xml:space="preserve">
    <value>Название:</value>
  </data>
  <data name="TilesField" xml:space="preserve">
    <value>Выберите размер сетки:</value>
  </data>
  <data name="TileX" xml:space="preserve">
    <value>Плитка {0}</value>
  </data>
  <data name="TitleSettings" xml:space="preserve">
    <value>Параметры плитки</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Да</value>
  </data>
  <data name="YouDontHaveAnyProjectsYet" xml:space="preserve">
    <value>У вас пока еще нет ни одного проекта.</value>
  </data>
</root>